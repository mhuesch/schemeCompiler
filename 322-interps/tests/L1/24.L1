(((esi <- 47)
  (eax <- (allocate esi 1))
  (edi <- eax)

  (eax <- (print edi))

  (call :f))

 (:f
  (ebx <- 1)

  :loop
  (cjump ebx < esi :keep_going :done)
  :keep_going

  ;; Compute current array index
  (edx <- ebx)
  (edx -= 1)    ;; Number conversion
  (edx *= 2)    ;; 4a form for pointer
  (edx += 4)    ;; Skip size word
  (edx += edi)  ;; Add base pointer

  (eax <- ebx)
  (eax &= 2)
  (cjump eax = 2 :odd :even)

  :odd
  ((mem edx 0) <- 5)
  (goto :fin)

  :even
  (goto :fin)

  :fin
  (ebx += 2)
  (goto :loop)


  :done
  (eax <- (print edi))

  (tail-call :g))

 (:g
  (ebx <- 1)

  :loop2
  (cjump ebx < esi :keep_going2 :done2)
  :keep_going2

  ;; Compute current array index
  (edx <- ebx)
  (edx -= 1)    ;; Number conversion
  (edx *= 2)    ;; 4a form for pointer
  (edx += 4)    ;; Skip size word
  (edx += edi)  ;; Add base pointer

  (eax <- ebx)
  (eax &= 2)
  (cjump eax = 2 :odd2 :even2)

  :odd2
  (goto :fin2)

  :even2
  ((mem edx 0) <- -5)
  (goto :fin2)

  :fin2
  (ebx += 2)
  (goto :loop2)

  :done2
  (eax <- (print edi))
  (return)))

